{"version":3,"sources":["component/Nav.js","component/Item.js","component/List.js","view/Areas.js","view/Categories.js","view/Category.js","view/Ingredients.js","view/Ingredient.js","view/Country.js","view/Meal.js","App.js","index.js"],"names":["Nav","useState","isActive","toggleIsActive","className","to","cx","onClick","Item","title","imgURL","length","slice","trim","src","alt","List","state","data","sites","site","type","props","fetch","this","url","then","response","json","setState","Math","ceil","prevState","disabled","Array","fill","map","el","i","category","strCategory","strCategoryThumb","idCategory","country","strArea","ingredient","strIngredient","idIngredient","meal","idMeal","strMeal","strMealThumb","React","Component","Areas","Categories","match","params","Ingredients","Ingredient","Country","Meal","id","ingredients","Object","fromEntries","entries","filter","key","value","startsWith","doses","recipe","values","val","index","keys","style","textTransform","strInstructions","App","exact","path","render","component","Category","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.87702f02.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport cx from \"classnames\";\r\nimport { NavLink } from \"react-router-dom\";\r\nconst Nav = () => {\r\n  const [isActive, toggleIsActive] = useState(0);\r\n  return (\r\n    <nav className=\"navbar is-light mb-3\">\r\n      <div className=\"navbar-brand\">\r\n        <NavLink className=\"navbar-item\" to=\"/\">\r\n          MealDB\r\n        </NavLink>\r\n        <div\r\n          className={cx(\"navbar-burger\", isActive ? \"is-active\" : null)}\r\n          onClick={() => toggleIsActive(!isActive)}\r\n        >\r\n          <span></span>\r\n          <span></span>\r\n          <span></span>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className={cx(\"navbar-menu\", isActive ? \"is-active\" : null)}\r\n        onClick={() => toggleIsActive(!isActive)}\r\n      >\r\n        <NavLink className=\"navbar-item\" to=\"/categories\">\r\n          Categories\r\n        </NavLink>\r\n        <NavLink className=\"navbar-item\" to=\"/countries\">\r\n          Countries\r\n        </NavLink>\r\n        <NavLink className=\"navbar-item\" to=\"/ingredients\">\r\n          Ingredients\r\n        </NavLink>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","const Item = ({ title = \"\", imgURL = null }) => {\r\n  return (\r\n    <div className=\"card\">\r\n      <header className=\"card-header\">\r\n        <p className=\"card-header-title\">\r\n          {title.length > 20 ? title.slice(0, 19).trim() + \"...\" : title}\r\n        </p>\r\n      </header>\r\n      {imgURL ? (\r\n        <div className=\"card-image\">\r\n          <figure className=\"image is-4by3\">\r\n            <img src={imgURL} alt=\"Item\" />\r\n          </figure>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Item;\r\n","import React from \"react\";\r\nimport cx from \"classnames\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Item from \"./Item\";\r\n\r\nclass List extends React.Component {\r\n  state = {\r\n    data: [],\r\n    sites: 0,\r\n    site: 0,\r\n    type: this.props.type === \"categories\" ? \"categories\" : \"meals\",\r\n  };\r\n  componentDidMount() {\r\n    fetch(this.props.url).then((response) =>\r\n      response.json().then((data) =>\r\n        this.setState({\r\n          data: data[this.state.type],\r\n          sites: Math.ceil(data[this.state.type].length / 12),\r\n        })\r\n      )\r\n    );\r\n  }\r\n  render() {\r\n    const { site, sites } = this.state;\r\n    const data = this.state.data.slice(site * 12, site * 12 + 12);\r\n    return (\r\n      <>\r\n        <nav className=\"pagination is-centered is-small\">\r\n          {sites > 10 ? (\r\n            <>\r\n              <button\r\n                className=\"pagination-previous\"\r\n                onClick={() =>\r\n                  this.setState((prevState) => ({ site: prevState.site - 1 }))\r\n                }\r\n                disabled={site === 0 ? true : false}\r\n              >\r\n                Previous\r\n              </button>\r\n              <button\r\n                className=\"pagination-next\"\r\n                onClick={() =>\r\n                  this.setState((prevState) => ({ site: prevState.site + 1 }))\r\n                }\r\n                disabled={site === sites - 1 ? true : false}\r\n              >\r\n                Next page\r\n              </button>\r\n              <ul className=\"pagination-list is-hidden-touch\">\r\n                <li\r\n                  className={cx(\r\n                    \"pagination-link\",\r\n                    site === 0 ? \"is-current\" : null\r\n                  )}\r\n                  onClick={() => this.setState({ site: 0 })}\r\n                >\r\n                  1\r\n                </li>\r\n                <li className=\"pagination-ellipsis\">&hellip;</li>\r\n                <li\r\n                  className={cx(\r\n                    \"pagination-link\",\r\n                    site === sites - 1 ? \"is-current\" : null\r\n                  )}\r\n                  onClick={() => this.setState({ site: sites - 1 })}\r\n                >\r\n                  {sites - 1}\r\n                </li>\r\n              </ul>\r\n            </>\r\n          ) : (\r\n            <ul className=\"pagination-list\">\r\n              {Array(sites)\r\n                .fill(1)\r\n                .map((el, i) => (\r\n                  <li\r\n                    className={cx(\r\n                      \"pagination-link\",\r\n                      site === i ? \"is-current\" : null\r\n                    )}\r\n                    key={i}\r\n                    onClick={() => this.setState({ site: i })}\r\n                  >\r\n                    {i + 1}\r\n                  </li>\r\n                ))}\r\n            </ul>\r\n          )}\r\n        </nav>\r\n        <div className=\"columns is-multiline mt-1\">\r\n          {this.props.type === \"categories\"\r\n            ? data.map((category) => (\r\n                <NavLink\r\n                  className=\"column is-one-third\"\r\n                  to={\"/category/\" + category.strCategory}\r\n                  key={category.idCategory}\r\n                >\r\n                  <Item\r\n                    title={category.strCategory}\r\n                    imgURL={category.strCategoryThumb}\r\n                  />\r\n                </NavLink>\r\n              ))\r\n            : this.props.type === \"countries\"\r\n            ? data.map((country) => (\r\n                <NavLink\r\n                  className=\"column is-one-fifth\"\r\n                  to={\"/country/\" + country.strArea}\r\n                  key={country.strArea}\r\n                >\r\n                  <Item title={country.strArea} />\r\n                </NavLink>\r\n              ))\r\n            : this.props.type === \"ingredients\"\r\n            ? data.map((ingredient) => (\r\n                <NavLink\r\n                  className=\"column is-one-quarter\"\r\n                  to={\"/ingredient/\" + ingredient.strIngredient}\r\n                  key={ingredient.idIngredient}\r\n                >\r\n                  <Item\r\n                    title={ingredient.strIngredient}\r\n                    imgURL={\r\n                      \"https://www.themealdb.com/images/ingredients/\" +\r\n                      ingredient.strIngredient +\r\n                      \".png\"\r\n                    }\r\n                  />\r\n                </NavLink>\r\n              ))\r\n            : this.props.type === \"meals\"\r\n            ? data.map((meal) => (\r\n                <NavLink\r\n                  className=\"column is-one-third\"\r\n                  to={\"/meal/\" + meal.idMeal}\r\n                  key={meal.idMeal}\r\n                >\r\n                  <Item title={meal.strMeal} imgURL={meal.strMealThumb} />\r\n                </NavLink>\r\n              ))\r\n            : null}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default List;\r\n","import List from \"../component/List\";\r\n\r\nconst areasURL = \"https://www.themealdb.com/api/json/v1/1/list.php?a=list\";\r\n\r\nconst Areas = () => (\r\n  <>\r\n    <List url={areasURL} type=\"countries\" />\r\n  </>\r\n);\r\n\r\nexport default Areas;\r\n","import List from \"../component/List\";\r\n\r\nconst categoriesURL = \"https://www.themealdb.com/api/json/v1/1/categories.php\";\r\n\r\nconst Categories = () => (\r\n  <>\r\n    <List url={categoriesURL} type=\"categories\" />\r\n  </>\r\n);\r\n\r\nexport default Categories;\r\n","import List from \"../component/List\";\r\n\r\nconst categoryURL = \"https://www.themealdb.com/api/json/v1/1/filter.php?c=\";\r\n\r\nconst Categories = (props) => {\r\n  const category = props.match.params.category;\r\n  return (\r\n    <>\r\n      <List url={categoryURL + category} type=\"meals\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Categories;\r\n","import List from \"../component/List\";\r\n\r\nconst ingredientsURL =\r\n  \"https://www.themealdb.com/api/json/v1/1/list.php?i=list\";\r\n\r\nconst Ingredients = () => (\r\n  <>\r\n    <List url={ingredientsURL} type=\"ingredients\" />\r\n  </>\r\n);\r\n\r\nexport default Ingredients;\r\n","import List from \"../component/List\";\r\n\r\nconst ingredientURL = \"https://www.themealdb.com/api/json/v1/1/filter.php?i=\";\r\n\r\nconst Ingredient = (props) => {\r\n  const ingredient = props.match.params.ingredient;\r\n  return (\r\n    <>\r\n      <List url={ingredientURL + ingredient} type=\"meals\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Ingredient;\r\n","import List from \"../component/List\";\r\n\r\nconst countryURL = \"https://www.themealdb.com/api/json/v1/1/filter.php?a=\";\r\n\r\nconst Country = (props) => {\r\n  const country = props.match.params.country;\r\n  return (\r\n    <>\r\n      <List url={countryURL + country} type=\"meals\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Country;\r\n","import React from \"react\";\r\nimport Item from \"../component/Item\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst mealURL = \"https://www.themealdb.com/api/json/v1/1/lookup.php?i=\";\r\n\r\nclass Meal extends React.Component {\r\n  state = { id: this.props.match.params.id, data: [] };\r\n  componentDidMount() {\r\n    fetch(mealURL + this.state.id).then((response) =>\r\n      response.json().then((data) =>\r\n        this.setState({\r\n          data: data[\"meals\"][0],\r\n        })\r\n      )\r\n    );\r\n  }\r\n  render() {\r\n    const { data } = this.state;\r\n    const ingredients = Object.fromEntries(\r\n      Object.entries(data).filter(\r\n        ([key, value]) => key.startsWith(\"strIngredient\") && value\r\n      )\r\n    );\r\n    const doses = Object.fromEntries(\r\n      Object.entries(data).filter(\r\n        ([key, value]) => key.startsWith(\"strMeasure\") && value\r\n      )\r\n    );\r\n    const recipe = Object.fromEntries(\r\n      Object.values(ingredients).map((val, index) => [\r\n        val,\r\n        Object.values(doses)[index],\r\n      ])\r\n    );\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"columns\">\r\n          <div className=\"column is-one-third\">\r\n            <Item\r\n              title={data.strMeal ? data.strMeal : \"\"}\r\n              imgURL={data.strMealThumb}\r\n            />\r\n          </div>\r\n          <div className=\"column\">\r\n            {Object.keys(recipe).map((ingredient, i) => (\r\n              <div key={i}>\r\n                <NavLink to={\"/ingredient/\" + ingredient}>\r\n                  <span style={{ textTransform: \"capitalize\" }}>\r\n                    {ingredient + \" \"}\r\n                  </span>\r\n                </NavLink>\r\n                {Object.values(recipe)[i]}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div>{data.strInstructions}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Meal;\r\n","import { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Nav from \"./component/Nav\";\r\nimport Areas from \"./view/Areas\";\r\nimport Categories from \"./view/Categories\";\r\nimport Category from \"./view/Category\";\r\nimport Ingredients from \"./view/Ingredients\";\r\nimport Ingredient from \"./view/Ingredient\";\r\nimport Country from \"./view/Country\";\r\nimport Meal from \"./view/Meal\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Nav />\r\n      <div className=\"container\">\r\n        <Switch>\r\n          <Route exact path=\"/\" render={() => <Redirect to=\"/categories\" />} />\r\n          <Route\r\n            exact\r\n            path=\"/mealdb\"\r\n            render={() => <Redirect to=\"/categories\" />}\r\n          />\r\n          <Route path=\"/categories\" component={Categories} />\r\n          <Route path=\"/category/:category\" component={Category} />\r\n          <Route path=\"/countries\" component={Areas} />\r\n          <Route path=\"/country/:country\" component={Country} />\r\n          <Route path=\"/ingredients\" component={Ingredients} />\r\n          <Route path=\"/ingredient/:ingredient\" component={Ingredient} />\r\n          <Route path=\"/meal/:id\" component={Meal} />\r\n        </Switch>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"bulma\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}